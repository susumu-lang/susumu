{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "Susumu",
  "scopeName": "source.susumu",
  "patterns": [
    {
      "include": "#comments"
    },
    {
      "include": "#keywords"
    },
    {
      "include": "#builtins"
    },
    {
      "include": "#functions"
    },
    {
      "include": "#operators"
    },
    {
      "include": "#strings"
    },
    {
      "include": "#numbers"
    },
    {
      "include": "#arrays"
    },
    {
      "include": "#objects"
    },
    {
      "include": "#tuples"
    },
    {
      "include": "#annotations"
    },
    {
      "include": "#patterns"
    },
    {
      "include": "#variables"
    },
    {
      "include": "#return-statements"
    },
    {
      "include": "#multiline-flows"
    },
    {
      "include": "#match-expressions"
    },
    {
      "include": "#match-cases"
    }
  ],
  "repository": {
    "comments": {
      "patterns": [
        {
          "name": "comment.line.double-slash.susumu",
          "begin": "//",
          "end": "$"
        },
        {
          "name": "comment.block.susumu",
          "begin": "/\\*",
          "end": "\\*/"
        }
      ]
    },
    "functions": {
      "patterns": [
        {
          "name": "meta.function.definition.susumu",
          "begin": "\\b([a-zA-Z_][a-zA-Z0-9_]*)\\s*\\(",
          "beginCaptures": {
            "1": {
              "name": "entity.name.function.susumu"
            }
          },
          "end": "\\)",
          "patterns": [
            {
              "name": "variable.parameter.susumu",
              "match": "\\b[a-zA-Z_][a-zA-Z0-9_]*\\b"
            },
            {
              "name": "punctuation.separator.parameter.susumu",
              "match": ","
            }
          ]
        },
        {
          "name": "entity.name.function.call.susumu",
          "match": "\\b([a-zA-Z_][a-zA-Z0-9_]*)(?=\\s*<-|\\s*->|\\s*$)",
          "captures": {
            "1": {
              "name": "entity.name.function.susumu"
            }
          }
        }
      ]
    },
    "keywords": {
      "patterns": [
        {
          "name": "keyword.control.susumu",
          "match": "\\b(return|if|else|while|for|break|continue|match|when)\\b"
        },
        {
          "name": "keyword.control.match.susumu",
          "match": "\\b(match)\\b"
        },
        {
          "name": "keyword.control.conditional.susumu",
          "match": "\\b(i|ei|e)\\b"
        },
        {
          "name": "keyword.other.condition.susumu",
          "match": "\\b(success|error|valid|positive|negative|zero|found|empty)\\b"
        },
        {
          "name": "keyword.other.pattern.susumu",
          "match": "\\b(some|none)\\b"
        },
        {
          "name": "constant.language.susumu",
          "match": "\\b(true|false|null)\\b"
        }
      ]
    },
    "operators": {
      "patterns": [
        {
          "name": "keyword.operator.arrow.susumu",
          "match": "(->|<-)"
        },
        {
          "name": "keyword.operator.comparison.susumu",
          "match": "(==|!=|<=|>=|<|>)"
        },
        {
          "name": "keyword.operator.logical.susumu",
          "match": "(&&|\\|\\||!)"
        },
        {
          "name": "keyword.operator.arithmetic.susumu",
          "match": "(\\+|\\-|\\*|/|%)"
        },
        {
          "name": "keyword.operator.assignment.susumu",
          "match": "="
        }
      ]
    },
    "strings": {
      "patterns": [
        {
          "name": "string.quoted.double.susumu",
          "begin": "\"",
          "end": "\"",
          "patterns": [
            {
              "name": "constant.character.escape.susumu",
              "match": "\\\\."
            }
          ]
        },
        {
          "name": "string.quoted.single.susumu",
          "begin": "'",
          "end": "'",
          "patterns": [
            {
              "name": "constant.character.escape.susumu",
              "match": "\\\\."
            }
          ]
        },
        {
          "name": "meta.string.concatenation.susumu",
          "match": "(\"[^\"]*\")(\\s*\\+\\s*)(\"[^\"]*\")",
          "captures": {
            "1": {
              "name": "string.quoted.double.susumu"
            },
            "2": {
              "name": "keyword.operator.arithmetic.susumu"
            },
            "3": {
              "name": "string.quoted.double.susumu"
            }
          }
        },
        {
          "name": "meta.string.variable.concatenation.susumu",
          "match": "(\"[^\"]*\")(\\s*\\+\\s*)([a-zA-Z_][a-zA-Z0-9_]*)",
          "captures": {
            "1": {
              "name": "string.quoted.double.susumu"
            },
            "2": {
              "name": "keyword.operator.arithmetic.susumu"
            },
            "3": {
              "name": "variable.other.susumu"
            }
          }
        },
        {
          "name": "meta.variable.string.concatenation.susumu",
          "match": "([a-zA-Z_][a-zA-Z0-9_]*)(\\s*\\+\\s*)(\"[^\"]*\")",
          "captures": {
            "1": {
              "name": "variable.other.susumu"
            },
            "2": {
              "name": "keyword.operator.arithmetic.susumu"
            },
            "3": {
              "name": "string.quoted.double.susumu"
            }
          }
        },
        {
          "name": "meta.property.string.concatenation.susumu",
          "match": "([a-zA-Z_][a-zA-Z0-9_]*\\.[a-zA-Z_][a-zA-Z0-9_]*)(\\s*\\+\\s*)(\"[^\"]*\")",
          "captures": {
            "1": {
              "name": "variable.other.property.susumu"
            },
            "2": {
              "name": "keyword.operator.arithmetic.susumu"
            },
            "3": {
              "name": "string.quoted.double.susumu"
            }
          }
        },
        {
          "name": "meta.string.property.concatenation.susumu",
          "match": "(\"[^\"]*\")(\\s*\\+\\s*)([a-zA-Z_][a-zA-Z0-9_]*\\.[a-zA-Z_][a-zA-Z0-9_]*)",
          "captures": {
            "1": {
              "name": "string.quoted.double.susumu"
            },
            "2": {
              "name": "keyword.operator.arithmetic.susumu"
            },
            "3": {
              "name": "variable.other.property.susumu"
            }
          }
        },
        {
          "name": "meta.complex.string.concatenation.susumu",
          "match": "(<-\\s*)(\"[^\"]*\")(\\s*\\+\\s*)([a-zA-Z_][a-zA-Z0-9_]*)",
          "captures": {
            "1": {
              "name": "keyword.operator.arrow.susumu"
            },
            "2": {
              "name": "string.quoted.double.susumu"
            },
            "3": {
              "name": "keyword.operator.arithmetic.susumu"
            },
            "4": {
              "name": "variable.other.susumu"
            }
          }
        }
      ]
    },
    "numbers": {
      "patterns": [
        {
          "name": "constant.numeric.float.susumu",
          "match": "\\b\\d+\\.\\d+\\b"
        },
        {
          "name": "constant.numeric.integer.susumu",
          "match": "\\b\\d+\\b"
        }
      ]
    },
    "arrays": {
      "patterns": [
        {
          "name": "meta.array.susumu",
          "begin": "\\[",
          "end": "\\]",
          "beginCaptures": {
            "0": {
              "name": "punctuation.definition.array.begin.susumu"
            }
          },
          "endCaptures": {
            "0": {
              "name": "punctuation.definition.array.end.susumu"
            }
          },
          "patterns": [
            {
              "include": "$self"
            },
            {
              "name": "punctuation.separator.array.susumu",
              "match": ","
            }
          ]
        }
      ]
    },
    "objects": {
      "patterns": [
        {
          "name": "meta.object.susumu",
          "begin": "\\{",
          "end": "\\}",
          "beginCaptures": {
            "0": {
              "name": "punctuation.definition.object.begin.susumu"
            }
          },
          "endCaptures": {
            "0": {
              "name": "punctuation.definition.object.end.susumu"
            }
          },
          "patterns": [
            {
              "name": "meta.object.member.susumu",
              "begin": "([a-zA-Z_][a-zA-Z0-9_]*)\\s*(:)",
              "beginCaptures": {
                "1": {
                  "name": "support.type.property-name.susumu"
                },
                "2": {
                  "name": "punctuation.separator.key-value.susumu"
                }
              },
              "end": "(?=[,}])",
              "patterns": [
                {
                  "include": "$self"
                }
              ]
            },
            {
              "name": "punctuation.separator.object.susumu",
              "match": ","
            }
          ]
        }
      ]
    },
    "tuples": {
      "patterns": [
        {
          "name": "meta.tuple.susumu",
          "begin": "\\(",
          "end": "\\)",
          "beginCaptures": {
            "0": {
              "name": "punctuation.definition.tuple.begin.susumu"
            }
          },
          "endCaptures": {
            "0": {
              "name": "punctuation.definition.tuple.end.susumu"
            }
          },
          "patterns": [
            {
              "include": "$self"
            },
            {
              "name": "punctuation.separator.tuple.susumu",
              "match": ","
            }
          ]
        }
      ]
    },
    "builtins": {
      "patterns": [
        {
          "name": "support.function.builtin.math.susumu",
          "match": "\\b(add|subtract|multiply|divide|power|sqrt|abs|min|max)\\b"
        },
        {
          "name": "support.function.builtin.string.susumu",
          "match": "\\b(concat|length|to_upper|to_lower|trim|split)\\b"
        },
        {
          "name": "support.function.builtin.array.susumu",
          "match": "\\b(first|last|length|sort|reverse|map|filter|reduce)\\b"
        },
        {
          "name": "support.function.builtin.type.susumu",
          "match": "\\b(type_of|to_string|to_number)\\b"
        },
        {
          "name": "support.function.builtin.io.susumu",
          "match": "\\b(print|println|read)\\b"
        },
        {
          "name": "support.function.builtin.validation.susumu",
          "match": "\\b(validate|validateOrder|validateUserId|enrichWithDefaults|calculateTotals)\\b"
        },
        {
          "name": "support.function.builtin.processing.susumu",
          "match": "\\b(processPayment|processOrder|prepareOrder|combineUserOrder|simplifiedProcessing)\\b"
        },
        {
          "name": "support.function.builtin.database.susumu",
          "match": "\\b(lookupInDatabase|save|updateInventory|updateUserHistory)\\b"
        },
        {
          "name": "support.function.builtin.communication.susumu",
          "match": "\\b(sendConfirmation|sendFailureNotification|notifyUser|notifyUserOfFailure|notifyAdmins)\\b"
        },
        {
          "name": "support.function.builtin.logging.susumu",
          "match": "\\b(logSuccess|logError|logInvalidUser|logPrimaryFailure|logCriticalFailure)\\b"
        },
        {
          "name": "support.function.builtin.payment.susumu",
          "match": "\\b(initiateRefund|chargeCard)\\b"
        }
      ]
    },
    "annotations": {
      "patterns": [
        {
          "name": "meta.annotation.susumu",
          "begin": "(@)([a-zA-Z_][a-zA-Z0-9_]*)",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.annotation.susumu"
            },
            "2": {
              "name": "entity.name.tag.annotation.susumu"
            }
          },
          "end": "(?=\\s|$|->|<-|\\{)",
          "patterns": [
            {
              "name": "keyword.operator.arrow.susumu",
              "match": "<-"
            },
            {
              "include": "$self"
            }
          ]
        },
        {
          "name": "entity.name.tag.annotation.common.susumu",
          "match": "@(trace|monitor|config|parallel|debug)\\b"
        }
      ]
    },
    "patterns": {
      "patterns": [
        {
          "name": "meta.pattern.match.susumu",
          "begin": "(some|none|success|error)\\s*(<-)",
          "beginCaptures": {
            "1": {
              "name": "keyword.other.pattern.susumu"
            },
            "2": {
              "name": "keyword.operator.arrow.susumu"
            }
          },
          "end": "(?=->|\\{|$)",
          "patterns": [
            {
              "include": "$self"
            }
          ]
        },
        {
          "name": "variable.other.pattern.susumu",
          "match": "\\b[a-zA-Z_][a-zA-Z0-9_]*\\b(?=\\s*<-)"
        }
      ]
    },
    "variables": {
      "patterns": [
        {
          "name": "variable.other.property.susumu",
          "match": "\\b[a-zA-Z_][a-zA-Z0-9_]*\\.[a-zA-Z_][a-zA-Z0-9_]*\\b"
        },
        {
          "name": "variable.assignment.susumu",
          "match": "\\b[a-zA-Z_][a-zA-Z0-9_]*\\b(?=\\s*=)"
        },
        {
          "name": "variable.parameter.susumu",
          "match": "\\b(?!(?:i|ei|e|fe|w|return|error|main|some|none|success|valid|positive|negative|zero|empty|found|match|add|subtract|multiply|divide|print|length|first|last|type_of|to_string|to_number|true|false|null)\\b)[a-zA-Z_][a-zA-Z0-9_]*\\b(?=\\s*->)"
        },
        {
          "name": "variable.other.susumu",
          "match": "\\b(?!(?:i|ei|e|fe|w|return|error|main|some|none|success|valid|positive|negative|zero|empty|found|match|add|subtract|multiply|divide|print|length|first|last|type_of|to_string|to_number|true|false|null)\\b)[a-zA-Z_][a-zA-Z0-9_]*\\b(?=\\s+<-)"
        },
        {
          "name": "variable.other.general.susumu",
          "match": "\\b(?!(?:i|ei|e|fe|w|return|error|main|some|none|success|valid|positive|negative|zero|empty|found|match|add|subtract|multiply|divide|print|length|first|last|type_of|to_string|to_number|true|false|null|validateOrder|enrichWithDefaults|calculateTotals|sendConfirmation|logSuccess|logError)\\b)[a-zA-Z_][a-zA-Z0-9_]*\\b"
        }
      ]
    },
    "return-statements": {
      "patterns": [
        {
          "name": "meta.return.nested.string.concat.susumu",
          "match": "(return)\\s*(<-)\\s*(\\w+)\\s*(<-)\\s*(\"[^\"]*\")(\\s*\\+\\s*)([a-zA-Z_][a-zA-Z0-9_]*)",
          "captures": {
            "1": {
              "name": "keyword.control.susumu"
            },
            "2": {
              "name": "keyword.operator.arrow.susumu"
            },
            "3": {
              "name": "keyword.other.condition.susumu"
            },
            "4": {
              "name": "keyword.operator.arrow.susumu"
            },
            "5": {
              "name": "string.quoted.double.susumu"
            },
            "6": {
              "name": "keyword.operator.arithmetic.susumu"
            },
            "7": {
              "name": "variable.other.susumu"
            }
          }
        },
        {
          "name": "meta.return.nested.arrows.susumu",
          "match": "(return)\\s*(<-)\\s*(\\w+)\\s*(<-)\\s*([^\\n]+)",
          "captures": {
            "1": {
              "name": "keyword.control.susumu"
            },
            "2": {
              "name": "keyword.operator.arrow.susumu"
            },
            "3": {
              "name": "keyword.other.condition.susumu"
            },
            "4": {
              "name": "keyword.operator.arrow.susumu"
            },
            "5": {
              "patterns": [
                {
                  "include": "$self"
                }
              ]
            }
          }
        },
        {
          "name": "meta.return.arrow.susumu",
          "match": "(return)\\s*(<-)\\s*([^\\n]+)",
          "captures": {
            "1": {
              "name": "keyword.control.susumu"
            },
            "2": {
              "name": "keyword.operator.arrow.susumu"
            },
            "3": {
              "patterns": [
                {
                  "include": "$self"
                }
              ]
            }
          }
        }
      ]
    },
    "multiline-flows": {
      "patterns": [
        {
          "name": "meta.multiline.arrow.flow.susumu",
          "begin": "([a-zA-Z_][a-zA-Z0-9_]*)\\s*(->)\\s*$",
          "beginCaptures": {
            "1": {
              "name": "variable.other.susumu"
            },
            "2": {
              "name": "keyword.operator.arrow.susumu"
            }
          },
          "end": "^\\s*([a-zA-Z_][a-zA-Z0-9_]*)\\s*$",
          "endCaptures": {
            "1": {
              "name": "variable.other.susumu"
            }
          },
          "patterns": [
            {
              "name": "meta.arrow.chain.line.susumu",
              "match": "^\\s*([a-zA-Z_][a-zA-Z0-9_]*)\\s*(<-)\\s*$",
              "captures": {
                "1": {
                  "name": "entity.name.function.susumu"
                },
                "2": {
                  "name": "keyword.operator.arrow.susumu"
                }
              }
            },
            {
              "name": "meta.arrow.chain.line.susumu",
              "match": "^\\s*([a-zA-Z_][a-zA-Z0-9_]*)\\s*(->)\\s*$",
              "captures": {
                "1": {
                  "name": "entity.name.function.susumu"
                },
                "2": {
                  "name": "keyword.operator.arrow.susumu"
                }
              }
            }
          ]
        },
        {
          "name": "meta.arrow.standalone.line.susumu",
          "match": "^\\s*([a-zA-Z_][a-zA-Z0-9_]*)\\s*(<-|->)\\s*$",
          "captures": {
            "1": {
              "name": "entity.name.function.susumu"
            },
            "2": {
              "name": "keyword.operator.arrow.susumu"
            }
          }
        },
        {
          "name": "meta.arrow.variable.line.susumu",
          "match": "^\\s*([a-zA-Z_][a-zA-Z0-9_]*)\\s*(->)\\s*$",
          "captures": {
            "1": {
              "name": "variable.other.susumu"
            },
            "2": {
              "name": "keyword.operator.arrow.susumu"
            }
          }
        },
        {
          "name": "meta.final.variable.line.susumu",
          "match": "^\\s*([a-zA-Z_][a-zA-Z0-9_]*)\\s*$",
          "captures": {
            "1": {
              "name": "variable.other.susumu"
            }
          }
        }
      ]
    },
    "match-expressions": {
      "patterns": [
        {
          "name": "meta.match.expression.susumu",
          "begin": "\\b(match)\\s*\\{",
          "beginCaptures": {
            "1": {
              "name": "keyword.control.match.susumu"
            }
          },
          "end": "\\}",
          "patterns": [
            {
              "name": "meta.match.case.binding.susumu",
              "begin": "\\b(success|error|some|none)\\s*(<-)\\s*([a-zA-Z_][a-zA-Z0-9_]*)\\s*(->)\\s*\\{",
              "beginCaptures": {
                "1": {
                  "name": "keyword.other.pattern.susumu"
                },
                "2": {
                  "name": "keyword.operator.arrow.susumu"
                },
                "3": {
                  "name": "variable.other.binding.susumu"
                },
                "4": {
                  "name": "keyword.operator.arrow.susumu"
                }
              },
              "end": "\\}",
              "patterns": [
                {
                  "include": "$self"
                }
              ]
            },
            {
              "name": "meta.match.case.simple.susumu",
              "begin": "\\b(success|error|some|none)\\s*(->)\\s*\\{",
              "beginCaptures": {
                "1": {
                  "name": "keyword.other.pattern.susumu"
                },
                "2": {
                  "name": "keyword.operator.arrow.susumu"
                }
              },
              "end": "\\}",
              "patterns": [
                {
                  "include": "$self"
                }
              ]
            },
            {
              "name": "meta.match.case.standalone.susumu",
              "match": "\\b(success|error|some|none)\\s*(<-)\\s*([a-zA-Z_][a-zA-Z0-9_]*)\\s*(->)\\s*\\{",
              "captures": {
                "1": {
                  "name": "keyword.other.pattern.susumu"
                },
                "2": {
                  "name": "keyword.operator.arrow.susumu"
                },
                "3": {
                  "name": "variable.other.binding.susumu"
                },
                "4": {
                  "name": "keyword.operator.arrow.susumu"
                }
              }
            },
            {
              "include": "$self"
            }
          ]
        }
      ]
    },
    "match-cases": {
      "patterns": [
        {
          "name": "meta.match.case.line.susumu",
          "match": "\\b(success|error|some|none)\\s*(<-)\\s*([a-zA-Z_][a-zA-Z0-9_]*)\\s*(->)\\s*\\{",
          "captures": {
            "1": {
              "name": "keyword.other.pattern.susumu"
            },
            "2": {
              "name": "keyword.operator.arrow.susumu"
            },
            "3": {
              "name": "variable.other.binding.susumu"
            },
            "4": {
              "name": "keyword.operator.arrow.susumu"
            }
          }
        }
      ]
    }
  }
}